{"version":3,"sources":["App.js","index.js"],"names":["svg","style","marginLeft","paddingTop","xmlns","fill","width","height","viewBox","d","App","useState","temperature","setTemperature","desc","setDesc","wind","setWind","city","setCity","country","setCountry","className","type","value","onChange","e","target","onClick","axios","method","url","then","res","Math","round","data","main","temp","console","log","weather","icon","speed","catch","error","getWeatherData","toUpperCase","src","Date","toLocaleString","toLowerCase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAIOA,EAAM,qBAAKC,MAAO,CAACC,WAAW,QAAQC,WAAW,OAAQC,MAAM,6BAA6BC,KAAK,UAAUC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAApI,SAAgJ,sBAAMC,EAAE,yuBAyDtJC,EArDH,WAAO,IAAD,EACsBC,mBAAS,IAD/B,mBACTC,EADS,KACIC,EADJ,OAEQF,mBAAS,IAFjB,mBAETG,EAFS,KAEHC,EAFG,OAGQJ,mBAAS,IAHjB,mBAGTK,EAHS,KAGHC,EAHG,OAIQN,mBAAS,YAJjB,mBAITO,EAJS,KAIHC,EAJG,OAKcR,mBAAS,MALvB,mBAKTS,EALS,KAKAC,EALA,KAwBhB,OACE,sBAAKC,UAAU,UAAf,UACE,qBAAKA,UAAU,SAAf,yBAGA,uBACA,oCACA,sBAAKA,UAAU,WAAf,UACE,uBACA,uBAAOC,KAAK,OAAOC,MAAON,EAAMO,SAAU,SAACC,GAAD,OAAOP,EAAQO,EAAEC,OAAOH,UAClE,uBAAOD,KAAK,OAAOC,MAAOJ,EAASK,SAAU,SAACC,GAAD,OAAOL,EAAWK,EAAEC,OAAOH,UACxE,wBAAQI,QAAS,YA5BA,SAACV,EAAME,GAC5BS,IAAM,CACJC,OAAQ,MACRC,IAAI,qDAAD,OAAuDb,EAAvD,YAA+DE,EAA/D,6CAEFY,MAAK,SAACC,GAELpB,EAAeqB,KAAKC,MAAMF,EAAIG,KAAKC,KAAKC,KAAO,SAC/CC,QAAQC,IAAIP,EAAIG,MAChBrB,EAAQkB,EAAIG,KAAKK,QAAQ,GAAGC,MAC5BzB,EAAQiB,KAAKC,MAAMF,EAAIG,KAAKpB,KAAK2B,WAElCC,OAAM,SAACC,GACNN,QAAQC,IAAIK,MAeYC,CAAe5B,EAAME,IAA7C,SAAwD,qBAAKhB,MAAM,6BAA6BC,KAAK,QAAQC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAApF,SAAgG,sBAAMC,EAAE,4NAEhK,sBAAKa,UAAU,YAAf,UACE,qCAAQJ,EAAK6B,cAAb,MAA+B3B,EAAQ2B,iBACvC,uBAFF,gBAGe,iCAAOb,KAAKC,MAAoB,IAAdvB,GAAqB,IAAvC,YAAqD,uBAHpE,QAIQ,uBAAMU,UAAU,OAAhB,cAAyBN,EAAzB,OAJR,OAKE,uBALF,WAMmB,KAATF,EAAcd,EAAM,qBAAKgD,IAAG,2CAAsClC,EAAtC,UACpC,uBACA,6BAAI,IAAImC,MAAOC,iBAAiBC,0BC/C1CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7da193bc.chunk.js","sourcesContent":["import React, { useState } from \"react\"\nimport axios from \"axios\"\nimport './App.css'\nimport Sun from './styled/sun.png'\n const svg = <svg style={{marginLeft:'100px',paddingTop:'5px'}} xmlns=\"http://www.w3.org/2000/svg\" fill='#fecf0c' width=\"48\" height=\"48\" viewBox=\"0 0 24 24\"><path d=\"M4.069 13h-4.069v-2h4.069c-.041.328-.069.661-.069 1s.028.672.069 1zm3.034-7.312l-2.881-2.881-1.414 1.414 2.881 2.881c.411-.529.885-1.003 1.414-1.414zm11.209 1.414l2.881-2.881-1.414-1.414-2.881 2.881c.528.411 1.002.886 1.414 1.414zm-6.312-3.102c.339 0 .672.028 1 .069v-4.069h-2v4.069c.328-.041.661-.069 1-.069zm0 16c-.339 0-.672-.028-1-.069v4.069h2v-4.069c-.328.041-.661.069-1 .069zm7.931-9c.041.328.069.661.069 1s-.028.672-.069 1h4.069v-2h-4.069zm-3.033 7.312l2.88 2.88 1.415-1.414-2.88-2.88c-.412.528-.886 1.002-1.415 1.414zm-11.21-1.415l-2.88 2.88 1.414 1.414 2.88-2.88c-.528-.411-1.003-.885-1.414-1.414zm2.312-4.897c0 2.206 1.794 4 4 4s4-1.794 4-4-1.794-4-4-4-4 1.794-4 4zm10 0c0 3.314-2.686 6-6 6s-6-2.686-6-6 2.686-6 6-6 6 2.686 6 6z\"/></svg>\n\n\n\nconst App = () => {\n  const [temperature, setTemperature] = useState(\"\")\n  const [desc, setDesc] = useState(\"\")\n  const [wind, setWind] = useState(\"\")\n  const [city, setCity] = useState(\"Belgrade\")\n  const [country, setCountry] = useState(\"RS\")\n\n  const getWeatherData = (city, country) => {\n    axios({\n      method: \"GET\",\n      url: `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&APPID=6f9f3c22febc914f1639e706d22918db`\n    })\n      .then((res) => {\n       // console.log(response.data.main.temp);\n        setTemperature(Math.round(res.data.main.temp - 273.15))\n        console.log(res.data)\n        setDesc(res.data.weather[0].icon)\n        setWind(Math.round(res.data.wind.speed))\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  return (\n    <div className='wrapper'>\n      <div className='header'>\n        Weather APP\n      </div>\n      <br />\n      <section>\n      <div className='main-div'>\n        <br />\n        <input type=\"text\" value={city} onChange={(e) => setCity(e.target.value)}/>\n        <input type=\"text\" value={country} onChange={(e) => setCountry(e.target.value)}/>\n        <button onClick={() => {getWeatherData(city, country)}}><svg xmlns=\"http://www.w3.org/2000/svg\" fill='white' width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm2 12l-4.5 4.5 1.527 1.5 5.973-6-5.973-6-1.527 1.5 4.5 4.5z\"/></svg></button>\n      </div>\n        <div className='main-div2'>\n          <span> {city.toUpperCase()} , {country.toUpperCase()}</span>\n          <br />\n          Temperature :<span>{Math.round(temperature * 100) / 100}Â°C </span><br/>\n           Wind:<span className='wind'> {wind} </span> m/s\n          <br />\n         Weather:{desc === '' ? svg : <img src={`https://openweathermap.com/img/w/${desc}.png`} />}\n          <br />\n          <p>{new Date().toLocaleString().toLowerCase()}</p>\n          \n        </div>\n      </section>      \n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}